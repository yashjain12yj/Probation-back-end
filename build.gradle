plugins {
    id 'org.springframework.boot' version '2.1.8.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}


String versionBuildNumber() {
    def versionPropsFile = file('gradle.properties')
    def versionBuild
    if (versionPropsFile.canRead()) {
        //has key value pairs of properties
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        versionBuild = versionProps['VERSION_BUILD']
    } else
        throw new FileNotFoundException("Could not read gradle.properties!")

    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
        versionProps['VERSION_BUILD'] = versionBuild.toString()
        versionProps.store(versionPropsFile.newWriter(), null)
    } else
        throw new FileNotFoundException("Could not read gradle.properties!")
    return versionBuild.toString()
}


group = 'com.buynsell'
version = '0.0.' + versionBuildNumber() + '-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile files('src/main/resources/ojdbc6.jar')
//    compile files('src/main/resources/mysql-connector-java-8.0.17.jar')
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testCompile('org.apache.httpcomponents:httpclient') // test was not getting response for 401 UNAUTHORIZED status
}
